swagger: "2.0"
info:
  title: User Registration API
  description: API for user registration
  version: 1.0.0

schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /users:
    post:
      tags:
        - users
      summary: Create a new user
      operationId: createUser
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          description: User object
          schema:
            $ref: "#/definitions/User"
      responses:
        '200':
          description: User created successfully
          schema:
            $ref: "#/definitions/User"
        '400':
          description: Invalid request
        '500':
          description: Internal server error

    get:
      tags:
        - users
      summary: Get all users
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/User"

  /users/{id}:
    get:
      tags:
        - users
      summary: Get user by ID
      operationId: getUserByID
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          type: integer
      responses:
        '200':
          description: User found
          schema:
            $ref: "#/definitions/User"
        '404':
          description: User not found
        '500':
          description: Internal server error

    put:
      tags:
        - users
      summary: Update user by ID
      operationId: updateUserByID
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          type: integer
        - in: body
          name: user
          description: Updated user object
          schema:
            $ref: "#/definitions/User"
      responses:
        '200':
          description: User updated successfully
          schema:
            $ref: "#/definitions/User"
        '404':
          description: User not found
        '500':
          description: Internal server error

    delete:
      tags:
        - users
      summary: Delete user by ID
      operationId: deleteUserByID
      parameters:
        - in: path
          name: id
          description: User ID
          required: true
          type: integer
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
        '500':
          description: Internal server error

definitions:
  User:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      email:
        type: string
